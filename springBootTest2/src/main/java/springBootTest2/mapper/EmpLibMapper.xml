<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="springBootTest2.mapper.EmpLibMapper">
<insert id="empLibInsert" parameterType="springBootTest2.domain.EmpLibDTO">
	insert into emp_library(LIB_NUM,LIB_WRITER,LIB_SUBJECT,LIB_CONTENT,EMP_NUM,IP_ADDR,LIB_PW)
	values(seq_num.nextval,#{libWriter}, #{libSubject}, #{libContent}, #{empNum}, #{ipAddr}, #{libPw})

</insert>

<select id="selectAll" resultType="springBootTest2.domain.EmpLibDTO">
	select LIB_NUM libNum, LIB_WRITER libWriter,LIB_SUBJECT libSubject,LIB_CONTENT libContent,
			EMP_NUM empNum,IP_ADDR ipAddr,LIB_PW libPw
	from emp_library
	order by lib_num
</select>

<select id="selectOne" resultType="springBootTest2.domain.EmpLibDTO" parameterType="string">
	select LIB_NUM libNum, LIB_WRITER libWriter,LIB_SUBJECT libSubject,LIB_CONTENT libContent,
			EMP_NUM empNum,IP_ADDR ipAddr,LIB_PW libPw
	from emp_library
	where lib_num = #{num}
</select>

<delete id="emplibDelte" parameterType="string">
	delete 
	from emp_library
	where lib_num = #{num}
</delete>

<update id="emplibUpdate" parameterType="springBootTest2.domain.EmpLibDTO">
	update emp_library
	set LIB_WRITER = #{libWriter},LIB_SUBJECT = #{libSubject}, LIB_CONTENT = #{libContent}, LIB_PW = #{libPw}
	where lib_num = #{libNum}
</update>

</mapper>